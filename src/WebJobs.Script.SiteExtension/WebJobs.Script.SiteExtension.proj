<Project Sdk="Microsoft.Build.NoTargets">
  <Import Project="..\..\build\common.props" />
  <Import Project="Tasks.targets" />

  <PropertyGroup>
    <TargetFramework>netstandard2.1</TargetFramework>
    <SiteExtensionName>Functions</SiteExtensionName>
    <PublishWebHostDependsOn>
      PublishProjectReferences;
      RemoveUnneededRuntimes;
      MoveSymbols;
      WriteHardLinkHashes;
    </PublishWebHostDependsOn>
  </PropertyGroup>

  <ItemGroup>
    <PublishRuntimeIdentifier Include="win-x86" SelfContained="false" PublishDir="32bit" Workers="Remove" />
    <PublishRuntimeIdentifier Include="win-x64" SelfContained="false" PublishDir="64bit" Workers="Move" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="../WebJobs.Script.WebHost/WebJobs.Script.WebHost.csproj" ReferenceOutputAssembly="false" />
  </ItemGroup>

  <!-- We set many properties and items in targets to ensure $(Version) is finalized. -->
  <Target Name="UpdatePaths" BeforeTargets="AddRuntimesToProjects;AssignTargetPaths">
    <PropertyGroup>
      <SiteExtensionRelativeDir>SiteExtension\$(Version)\</SiteExtensionRelativeDir>
      <SiteExtensionDir>$([MSBuild]::NormalizePath('$(PublishDir)$(SiteExtensionRelativeDir)'))</SiteExtensionDir>
    </PropertyGroup>
    <ItemGroup>
      <None Include="applicationHost.xdt" TargetPath="$(SiteExtensionRelativeDir)applicationHost.xdt" CopyToPublishDirectory="PreserveNewest" />
      <None Include="extension.xml" TargetPath="SiteExtension\extension.xml" CopyToPublishDirectory="PreserveNewest" />
    </ItemGroup>
  </Target>

  <Target Name="AddRuntimesToProjects" BeforeTargets="AssignProjectConfiguration">
    <ItemGroup>
      <_ProjectReferenceWithRuntimes Include="@(ProjectReference)">
        <AdditionalProperties>
          RuntimeIdentifier=%(PublishRuntimeIdentifier.Identity);
          SelfContained=%(PublishRuntimeIdentifier.SelfContained);
          PublishDir=$(SiteExtensionDir)%(PublishRuntimeIdentifier.PublishDir)/
        </AdditionalProperties>
        <Private>false</Private> <!-- Avoids including transitive output. -->
      </_ProjectReferenceWithRuntimes>
      <ProjectReference Remove="@(ProjectReference)" />
      <ProjectReference Include="@(_ProjectReferenceWithRuntimes)" />
    </ItemGroup>
  </Target>

  <Target Name="PublishWebHost" AfterTargets="PrepareForPublish" BeforeTargets="Publish" DependsOnTargets="$(PublishWebHostDependsOn)" />

  <Target Name="PublishProjectReferences" AfterTargets="PrepareForPublish" BeforeTargets="Publish">
    <MSBuild Projects="@(ProjectReference)" Targets="Publish" BuildInParallel="$(BuildInParallel)" Properties="NoBuild=true" />
  </Target>

  <Target Name="ConsolidateWorkers">
    <!-- Clean this directory -->
    <RemoveDir Directories="$(SiteExtensionDir)workers" />

    <MoveDir
      Directories="@(PublishRuntimeIdentifier->'$(SiteExtensionDir)%(PublishDir)/workers')"
      Destinations="@(PublishRuntimeIdentifier->'$(SiteExtensionDir)workers')"
      Condition="'%(Workers)' == 'Move'" />
    <RemoveDir
      Directories="@(PublishRuntimeIdentifier->'$(SiteExtensionDir)%(PublishDir)/workers')"
      Condition="'%(Workers)' == 'Remove'" />

    <!-- Ensure this exists at the end -->
    <MakeDir Directories="$(SiteExtensionDir)workers" />

    <!-- We don't need python -->
    <RemoveDir Directories="$(SiteExtensionDir)workers/python" />
  </Target>

  <Target Name="CleanPowershellRuntimes">
    <ItemGroup>
      <_PowershellRuntimesToKeep Include="win;win-x86;win10-x86;win-x64;win10-x64" />
      <_PowershellRuntimesToRemove Include="$([System.IO.Directory]::GetDirectories('$(SiteExtensionDir)workers/powershell'))" />
    </ItemGroup>
    <RemovePowershellRuntimes WorkerDirectories="@(_PowershellRuntimesToRemove)" ExcludeRuntimes="@(_PowershellRuntimesToKeep)" />
  </Target>

  <Target Name="RemoveUnneededRuntimes">
    <ItemGroup>
      <_RuntimesToRemove Include="@(PublishRuntimeIdentifier->'$(SiteExtensionDir)%(PublishDir)/runtimes/linux')" />
      <_RuntimesToRemove Include="@(PublishRuntimeIdentifier->'$(SiteExtensionDir)%(PublishDir)/runtimes/osx')" />
    </ItemGroup>
    <RemoveDir Directories="@(_RuntimesToRemove)" />
  </Target>

  <Target Name="MoveSymbols">
    <MoveSymbols
      Directories="@(PublishRuntimeIdentifier->'$(SiteExtensionDir)%(PublishDir)')"
      Destinations="@(PublishRuntimeIdentifier->'$(PublishDir)Symbols\$(SiteExtensionName).Symbols.$(Version).%(Identity)')" />
  </Target>

  <Target Name="ComputeHardLinkHashes">
    <ItemGroup>
      <_FilesToHash Include="$(SiteExtensionDir)**" />
    </ItemGroup>
    <GetFileHash Files="@(_FilesToHash)" HashEncoding="base64">
      <Output TaskParameter="Items" ItemName="_HashedFiles" />
    </GetFileHash>
  </Target>

  <Target Name="WriteHardLinkHashes" DependsOnTargets="ComputeHardLinkHashes">
    <ItemGroup>
      <_HashedFiles RelativePath=".$([System.IO.Path]::DirectorySeparatorChar)$([MSBuild]::MakeRelative('$(SiteExtensionDir)', '%(Identity)'))" />
    </ItemGroup>
    <WriteLinesToFile
      Overwrite="true"
      File="$(SiteExtensionDir)/hashesForHardlinks.txt"
      Lines="@(_HashedFiles->'Hash: %(FileHash) FileName: %(RelativePath)')" />
  </Target>

</Project>

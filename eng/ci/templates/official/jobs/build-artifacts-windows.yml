jobs:
- job: BuildArtifactsWindows
  displayName: Build Windows Artifacts

  pool:
    name: 1es-pool-azfunc
    image: 1es-windows-2022 
    os: windows

  variables:
    ${{ if or( eq( variables['Build.Reason'], 'PullRequest' ), and(not( contains( variables['Build.SourceBranch'], 'release/in-proc.' ) ), not( contains( variables['Build.SourceBranch'], 'release/4.' ) ), not( contains( variables['Build.SourceBranch'], 'release/ExtensionsMetadataGenerator/' ) ) ) ) }}:
        packSuffixSwitchTemp: --version-suffix $(buildNumber)
        emgSuffixSwitchTemp: --version-suffix ci$(buildNumber)
    packSuffixSwitch: $[variables.packSuffixSwitchTemp]
    emgSuffixSwitch: $[variables.emgSuffixSwitchTemp]
    nuget_package_path: $(Build.ArtifactStagingDirectory)/NugetPackages
    log_dir: $(Build.ArtifactStagingDirectory)/log

  templateContext:
    outputParentDirectory: $(Build.ArtifactStagingDirectory)
    outputs:
    - output: pipelineArtifact
      displayName: Publish site extension
      path: $(Build.ArtifactStagingDirectory)/SiteExtension
      artifact: SiteExtension
    - output: pipelineArtifact
      displayName: Publish private site extension
      path: $(Build.ArtifactStagingDirectory)/PrivateSiteExtension
      artifact: PrivateSiteExtension
    - output: pipelineArtifact
      displayName: Publish site extension symbols
      path: $(Build.ArtifactStagingDirectory)/SiteExtensionSymbols
      artifact: Symbols
    - output: pipelineArtifact
      displayName: Publish nuget packages
      path: $(Build.ArtifactStagingDirectory)/NugetPackages
      artifact: NugetPackages
    - output: pipelineArtifact
      displayName: Publish logs
      path: $(log_dir)
      artifact: Windows_Log
      sbomEnabled: false
      condition: always()

  steps:
  - template: /eng/ci/templates/install-dotnet.yml@self
  - template: /eng/ci/templates/steps/build-site-ext.yml@self

  - task: DotNetCoreCLI@2
    displayName: Build host packages
    inputs:
      command: custom
      custom: pack
      arguments: -p:BuildNumber=$(buildNumber) -c release $(packSuffixSwitch) -o $(nuget_package_path)
      projects: |
        **/WebJobs.Script.csproj
        **/WebJobs.Script.WebHost.csproj
        **/WebJobs.Script.Grpc.csproj

  - task: DotNetCoreCLI@2
    displayName: Build Abstractions and ExtensionsMetadataGenerator
    inputs:
      command: build
      arguments: '-c release'
      projects: |
        **/ExtensionsMetadataGenerator.csproj
        **/WebJobs.Script.Abstractions.csproj

  - template: ci/sign-files.yml@eng
    parameters:
      displayName: Sign Abstractions assemblies
      folderPath: out/bin/WebJobs.Script.Abstractions/release
      pattern: Microsoft.Azure.WebJobs.Script.Abstractions*.dll
      signType: dll

  - task: DotNetCoreCLI@2
    displayName: Pack Abstractions
    inputs:
      command: custom
      custom: pack
      arguments: '--no-build -c release -o $(nuget_package_path)'
      projects: |
        **/WebJobs.Script.Abstractions.csproj

  - template: ci/sign-files.yml@eng
    parameters:
      displayName: Sign ExtensionsMetadataGenerator assemblies
      folderPath: out/bin/ExtensionsMetadataGenerator
      pattern: Microsoft.Azure.WebJobs.Script.ExtensionsMetadataGenerator*.dll
      signType: dll-strong-name

  - task: DotNetCoreCLI@2
    displayName: Pack ExtensionsMetadataGenerator
    inputs:
      command: custom
      custom: pack
      arguments: '--no-build -c release $(emgSuffixSwitch) -o $(nuget_package_path)'
      projects: |
        **/ExtensionsMetadataGenerator.csproj

  - template: ci/sign-files.yml@eng
    parameters:
      displayName: Sign NugetPackages
      folderPath: out/pkg/release
      pattern: '*.nupkg'
      signType: nuget

  - task: DeleteFiles@1
    displayName: Delete CodeSignSummary files
    inputs:
      contents: '**/CodeSignSummary-*.md'

  - task: DeleteFiles@1
    displayName: Delete CodeSignSummary files
    inputs:
      contents: '$(nuget_package_path)/**/CodeSignSummary-*.md'

parameters:
- name: minorVersionPrefix
  type: string
  default: ''

jobs:
- job: BuildArtifactsLinux
  displayName: Build Linux Artifacts

  variables:
    project: src/WebJobs.Script.WebHost/WebJobs.Script.WebHost.csproj
    configuration: release
    runtime: linux-x64
    log_dir: $(Build.ArtifactStagingDirectory)/log
    build_args: '-v m -c $(configuration) -r $(runtime) --self-contained true -p:BuildNumber=$(buildNumber) -p:MinorVersionPrefix=${{ parameters.minorVersionPrefix }} -p:IsPackable=false'

  templateContext:
    outputParentDirectory: $(Build.ArtifactStagingDirectory)
    outputs:
    # TODO: onboard to Azure Artifacts Drops to allow accessing this from docker linux pipeline in msazure
    # https://eng.ms/docs/cloud-ai-platform/devdiv/one-engineering-system-1es/1es-docs/azure-artifacts/artifact-services-onboarding
    - output: pipelineArtifact
      displayName: Publish linux artifacts
      targetPath: $(Build.ArtifactStagingDirectory)/Microsoft.Azure.WebJobs.Script.WebHost.$(Build.BuildNumber).$(configuration)_$(runtime).zip
      artifact: Linux
      sbomBuildDropPath: out/pub/WebJobs.Script.WebHost/$(configuration)_$(runtime) # TODO: set this from msbuild?
    - output: pipelineArtifact
      displayName: Publish logs
      path: $(log_dir)
      artifact: Linux_Log
      sbomEnabled: false
      condition: always()

  pool:
    name: 1es-pool-azfunc
    image: 1es-ubuntu-22.04
    os: linux

  steps:
  - template: /eng/ci/templates/install-dotnet.yml@self

  - task: DotNetCoreCLI@2
    displayName: Restore
    inputs:
      command: custom
      custom: restore
      projects: $(project)
      arguments: '-v m -r $(runtime) -p:PublishReadyToRun=true -bl:$(log_dir)/restore.binlog' # add PublishReadyToRun=true for https://github.com/dotnet/sdk/issues/20701

  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      command: custom
      custom: build
      projects: $(project)
      arguments: '--no-restore $(build_args) -bl:$(log_dir)/build.binlog'

  - task: DotNetCoreCLI@2
    displayName: Publish
    inputs:
      command: custom
      custom: publish
      publishWebProjects: false
      zipAfterPublish: false
      projects: $(project)
      arguments: '--no-build $(build_args) -p:PublishZipDir=$(Build.ArtifactStagingDirectory) -bl:$(log_dir)/publish.binlog'

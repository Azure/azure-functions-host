parameters:
  - name: configuration
    type: string
    default: Release
  - name: results_path
    type: string
    default: $(System.DefaultWorkingDirectory)/test-results
  - name: filter
    type: string
    default: All
    values:
      - All
      - Unit
      - Integration

steps:
- ${{ if in(parameters.filter, 'All', 'Integration') }}:
  - task: AzureKeyVault@1
    inputs:
      # Note: This is actually a Service Connection in DevOps, not an Azure subscription name
      azureSubscription: Azure-Functions-Host-CI-internal
      keyVaultName: azurefunctionshostciv1
      secretsFilter: '*'

- ${{ if in(parameters.filter, 'All', 'Unit') }}:
  - task: UseNode@1
    displayName: Install Node 6.11.2
    inputs:
      version: '6.11.2'

- pwsh: .\runtests.ps1 -ResultsPath ${{ parameters.results_path }}  -Configuration ${{ parameters.configuration }}
  displayName: Run tests (${{ parameters.filter }})
  env:
    TMP: $(Agent.TempDirectory)
    MOCHA_FILE: ${[ parameters.results_path }}/junit-test-results.xml
    ${{ if in(parameters.filter, 'All', 'Integration') }}:
      AzureWebJobsStorage: $(Storage)
      AzureWebJobsDashboard: $(Storage)
      AzureWebJobsServiceBus: $(ServiceBus)
      AzureWebJobsDocumentDBConnectionString: $(CosmosDB)
      AzureWebJobsMobileAppUri: $(MobileUri)
      AzureWebJobs_TestMobileUri: $(MobileUri)
      AzureWebJobsDropBox: UseLocalFileSystem=true;Path=%TEMP%\DropBox
      AzureWebJobsEventHubSender: $(EventHub)
      AzureWebJobsEventHubReceiver: $(EventHub)
      AzureWebJobsEventHubPath: testhub
      AzureWebJobsNotificationHubsConnectionString: $(NotificationHub)
      AzureWebJobsNotificationHubName: testhub
      AzureWebJobsEnv: Development
      FILES_ACCOUNT_NAME: $(FilesAccountName)
      FILES_ACCOUNT_KEY: $(FilesAccountKey)
      AzureWebJobsScriptRoot: $(System.DefaultWorkingDirectory)\test\WebJobs.Script.Tests.Integration\TestScripts\Empty
      AzureWebJobsCosmosDBConnectionString: $(CosmosDB)
      ConnectionStrings__CosmosDB: $(CosmosDB2)
      AzureWebJobsSecretStorageKeyVaultName: $(KeyVaultName)
      AzureWebJobsSecretStorageKeyVaultConnectionString: $(KeyVaultConnectionString)

- task: PublishTestResults@2
  displayName: Publish XUnit test results
  inputs:
    testResultsFormat: XUnit
    testResultsFiles: ${{ parameters.results_path }}/xunit-*.xml
    mergeTestResults: true
    buildConfiguration: $(configuration)
    testRunTitle: XUnit Tests
  condition: always()


- ${{ if in(parameters.filter, 'All', 'Unit') }}:
  - task: PublishTestResults@2
    displayName: Publish JUnit test results
    inputs:
      testResultsFormat: JUnit
      testResultsFiles: ${{ parameters.results_path }}/junit-*.xml
      mergeTestResults: true
      buildConfiguration: $(configuration)
      testRunTitle: JUnit Tests
    condition: always()

{
    "title": "JSON schema for Azure Functions host.json files",
    "$schema": "http://json-schema.org/draft-04/schema#",

    "type": "object",

    "properties": {
        "id": {
            "description": "The unique ID for this job host. Can be a lower case GUID with dashes removed",
            "type": "string",
            "minLength": 1
        },

        "functions": {
            "description": "The list of functions the host should load.",
            "type": "array",

            "items": {
                "type": "string",
                "uniqueItems": true
            }
        },

        "functionTimeout": {
            "description": "Value indicating the timeout duration for all functions.",
            "oneOf": [
                {
                    "type": "string",
                    "pattern": "^\\d\\d:\\d\\d:\\d\\d$"
                },
                {
                    "enum": [ null ]
                }
            ]
        },

        "watchDirectories": {
            "description": "Set of shared code directories that should be monitored for changes to ensure that when code in these directories is changed, it is picked up by your functions",
            "type": "array",

            "items": {
                "type": "string",
                "minLength": 1,
                "uniqueItems": true
            }
        },

        "singleton": {
            "description": "Configuration settings for Singleton lock behavior.",
            "type": "object",

            "properties": {
                "lockPeriod": {
                    "description": "The period that function level locks are taken for (they will auto renew).",
                    "pattern": "^\\d\\d:\\d\\d:\\d\\d$",
                    "default": "00:00:15"
                },

                "listenerLockPeriod": {
                    "description": "The period that listener locks are taken for.",
                    "pattern": "^\\d\\d:\\d\\d:\\d\\d$",
                    "default": "00:01:00"
                },

                "listenerLockRecoveryPollingInterval": {
                    "description": "The time interval used for listener lock recovery if a listener lock couldn't be acquired on startup.",
                    "pattern": "^\\d\\d:\\d\\d:\\d\\d$",
                    "default": "00:01:00"
                },

                "lockAcquisitionTimeout": {
                    "description": "The maximum amount of time the runtime will try to acquire a lock.",
                    "pattern": "^\\d\\d:\\d\\d:\\d\\d$",
                    "default": "00:01:00"
                },

                "lockAcquisitionPollingInterval": {
                    "description": "The interval between lock acquisition attempts.",
                    "pattern": "^\\d\\d:\\d\\d:\\d\\d$"
                }
            }
        },

        "logger": {
            "description": "Configuration settings for logging.",
            "type": "object",

            "properties": {
                "categoryFilter": {
                    "properties": {
                        "defaultLevel": {
                            "description": "The default level for logging. If a category level is not specified, this value is used.",
                            "enum": [ "Critical", "Debug", "Error", "Information", "None", "Trace", "Warning" ],
                            "default": "Information"
                        },
                        "categoryLevels": {
                            "description": "Log levels for specific categories.",
                            "type": "object",
                            "additionalProperties": {
                                "enum": [ "Critical", "Debug", "Error", "Information", "None", "Trace", "Warning" ]
                            }
                        }
                    }
                },
                "aggregator": {
                    "description": "Configuration settings for the function result aggregator.",
                    "type": "object",

                    "properties": {
                        "batchSize": {
                            "description": "The maximum batch size for aggregations. If this value is reached before the 'flushTimeout', all values will be flushed.",
                            "type": "integer",
                            "default": 1000
                        },

                        "flushTimeout": {
                            "description": "The aggregation duration. The aggregator will flush periodically based on this value.",
                            "pattern": "^\\d\\d:\\d\\d:\\d\\d$",
                            "default": "00:00:30"
                        }
                    }
                },
                "fileLoggingMode": {
                    "description": "Value determining what level of file logging is enabled.",
                    "enum": [ "never", "always", "debugOnly" ],
                    "default": "debugOnly"
                }
            }
        },

        "languageWorker": {
            "description": "Configuration settings for Language Workers.",
            "type": "object",

            "properties": {
                "maxMessageLength": {
                    "description": "Defines maximum message size in MegaBytes (MB) for the streaming messages between the functions host and a language worker",
                    "type": "integer",
                    "minimum": 4,
                    "default": 32
                },
                "workersDirectory": {
                    "description": "Specifies full path of the directory for language workers",
                    "type": "string"
                }
            }
        },

        "applicationInsights": {
            "description": "Configuration settings for Application Insights logging.",
            "type": "object",

            "properties": {
                "sampling": {
                    "description": "Configuration settings for Application Insights client-side adaptive sampling.",
                    "type": "object",

                    "properties": {
                        "isEnabled": {
                            "description": "If true, client-side adaptive sampling is enabled.",
                            "type": "boolean",
                            "default": true
                        },

                        "maxTelemetryItemsPerSecond": {
                            "description": "The target rate that the adaptive algorithm aims for on each instance",
                            "type": "integer",
                            "default": 5
                        }
                    }
                }
            }
        },

        "extensions": {
            "description": "Configuration options for extensions installed on this host.",
            "type": "object",

            "http": {
                "description": "Configuration settings for 'http' triggers.",
                "type": "object",
                "required": [ "routePrefix" ],

                "properties": {
                    "routePrefix": {
                        "description": "Defines the default route prefix that applies to all routes. Use an empty string to remove the prefix.",
                        "type": "string",
                        "default": "api"
                    },
                    "maxConcurrentRequests": {
                        "description": "Defines the the maximum number of http functions that will execute in parallel.",
                        "type": "integer",
                        "default": -1
                    },
                    "maxOutstandingRequests": {
                        "description": "Defines the maximum number of oustanding requests that will be held at any given time.",
                        "type": "integer",
                        "default": -1
                    },
                    "dynamicThrottlesEnabled": {
                        "description": "Indicates whether dynamic host counter checks should be enabled.",
                        "type": "boolean",
                        "default": false
                    }
                }
            },

            "queues": {
                "description": "Configuration settings for 'queue' triggers.",
                "type": "object",

                "properties": {
                    "maxPollingInterval": {
                        "description": "The maximum interval in milliseconds between queue polls.",
                        "type": "integer",
                        "default": 1000
                    },

                    "batchSize": {
                        "description": "The number of queue messages to retrieve and process in parallel (per job function).",
                        "type": "integer",
                        "maximum": 32,
                        "minimum": 1,
                        "default": 16
                    },

                    "maxDequeueCount": {
                        "description": "The number of times to try processing a message before moving it to the poison queue",
                        "type": "integer",
                        "default": 5
                    },

                    "newBatchThreshold": {
                        "description": "The threshold at which a new batch of messages will be fetched. The default is batchSize/2.",
                        "type": "integer"
                    },

                    "visibilityTimeout": {
                        "description": "The visibility timeout that will be applied to messages that fail processing.",
                        "pattern": "^\\d\\d:\\d\\d:\\d\\d$",
                        "default": "00:00:00"
                    }
                }
            },

            "serviceBus": {
                "description": "Configuration settings for 'serviceBus' triggers.",
                "type": "object",

                "properties": {
                    "prefetchCount": {
                        "description": "The default PrefetchCount that will be used by the underlying MessageReceiver.",
                        "type": "integer"
                    },

                    "messageHandlerOptions": {
                        "description": "The options that will be used for the message handler registered with the MessageReceiver.",
                        "type": "object",

                        "properties": {
                            "maxConcurrentCalls": {
                                "description": "The maximum number of concurrent calls to the callback the message pump should initiate.",
                                "type": "integer",
                                "default": 16
                            },

                            "maxAutoRenewTimeout": {
                                "description": "The maximum duration within which the Service Bus message lock will be renewed automatically.",
                                "type": "string",
                                "pattern": "^\\d\\d:\\d\\d:\\d\\d$",
                                "default": "00:05:00"
                            },

                            "autoComplete": {
                                "description": "Value determining whether messages will be completed automatically, or whether the function will take responsibility message completion.",
                                "type": "boolean",
                                "default": true
                            }
                        }
                    }
                }
            },

            "eventHubs": {
                "description": "Configuration settings for 'eventHub' triggers.",
                "type": "object",

                "properties": {
                    "maxBatchSize": {
                        "description": "The maximum event count received per receive loop.",
                        "type": "integer"
                    },

                    "receiveTimeout": {
                        "description": "the timespan in which the user is willing to wait when the event processor is performing a receive operation.",
                        "type": "string",
                        "pattern": "^\\d\\d:\\d\\d:\\d\\d$",
                        "default": "00:01:00"
                    },

                    "enableReceiverRuntimeMetric": {
                        "description": "Value indicating whether the runtime metric of a receiver is enabled.",
                        "type": "boolean"
                    },

                    "prefetchCount": {
                        "description": "The default PrefetchCount that will be used by the underlying EventProcessorHost.",
                        "type": "integer"
                    },

                    "invokeProcessorAfterReceiveTimeout": {
                        "description": "Value indicating whether the processor should be invoked after every ReceiveTimeout when there are no more messages in the stream for a partition.",
                        "type": "boolean"
                    },

                    "batchCheckpointFrequency": {
                        "description": "The number of batches to process before creating an EventHub cursor checkpoint",
                        "type": "integer",
                        "default": 1
                    }
                }
            },

            "durableTask": {
                "description": "Configuration settings for 'orchestration'/'activity' triggers.",
                "type": "object",

                "properties": {
                    "hubName": {
                        "description": "The logical container for Azure Storage resources that are used for orchestrations.",
                        "type": "string",
                        "default": "DurableFunctionsHub"
                    },

                    "azureStorageConnectionStringName": {
                        "description": "An app setting (or environment variable) with the storage connection string to be used by the orchestration/activity trigger.",
                        "type": "string"
                    }
                }
            }
        }
    }
}

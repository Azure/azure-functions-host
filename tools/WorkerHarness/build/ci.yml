trigger:
  branches:
    include:
    - features/harness
  paths:
    include:
    - src/
pr:
  branches:
    include:
    - features/harness
  paths:
    include:
    - src/

jobs:
- job: "Build"
  pool:
    name: '1ES-Hosted-AzFunc'
    demands:
      - ImageOverride -equals MMS2022TLS

  variables:
    ${{ if not(contains(variables['Build.SourceBranch'], '/release/' )) }}:
      buildNumberTemp: $(Build.BuildNumber)
    ${{ if contains(variables['Build.SourceBranch'], '/release/' ) }}:
      isReleaseBuildTemp: true
    buildNumber: $[variables.buildNumberTemp]
    isReleaseBuild: $[variables.isReleaseBuildTemp]
    solution: '**/*.sln'
    buildPlatform: 'Any CPU'
    buildConfiguration: 'Release'

  steps:
    - pwsh: |
        Invoke-WebRequest 'https://raw.githubusercontent.com/dotnet/cli/master/scripts/obtain/dotnet-install.ps1' -OutFile 'dotnet-install.ps1'
        ./dotnet-install.ps1 -InstallDir "$env:ProgramFiles/dotnet" -Version "6.0.100" -Channel 'release'
      displayName: 'Install the .Net version used by the Core Tools for Windows'
      condition: and(eq( variables['Agent.OS'], 'Windows_NT' ), eq(variables['FUNCTIONSRUNTIMEVERSION'], '4'))
    - task: DotNetCoreCLI@2
      displayName: 'Build projects'
      inputs:
        command: 'build'
        arguments: '-c Release -p:BuildNumber=$(buildNumber) -p:IsLocalBuild=False'
        projects: '**\WorkerHarness.sln'

    - task: DotNetCoreCLI@2
      displayName: 'Build packages'
      inputs:
        command: 'custom'
        custom: 'pack'
        arguments: '--no-build -c Release -o packages -p:BuildNumber=$(buildNumber) -p:IsLocalBuild=False'
        projects: |
          **\WorkerHarness.Console.csproj

    - publish: $(System.DefaultWorkingDirectory)/packages
      artifact: drop

  
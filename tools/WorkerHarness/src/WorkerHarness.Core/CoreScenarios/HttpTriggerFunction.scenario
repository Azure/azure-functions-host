{
  "scenarioName": "Loading and invoking a http - trigger function",
  "actions": [
    {
      "type": "default",
      "name": "Loading http - trigger function ...",
      "repeatable": false,
      "messages": [
        {
          "id": "message_1",
          "contentCase": "FunctionLoadRequest",
          "direction": "Outgoing",
          "content": {
            "FunctionId": "FunctionApp.HttpTrigger.Run",
            "Metadata": {
              "ScriptFile": "FunctionApp.dll",
              "EntryPoint": "FunctionApp.HttpTrigger.Run",
              "Name": "HttpTrigger",
              "Bindings": {
                "req": { "type": "httpTrigger" },
                "$return": {
                  "type": "http",
                  "direction": "out"
                }
              }
            }
          }
        },
        {
          "id": "message_2",
          "contentCase": "FunctionLoadResponse",
          "direction": "Incoming",
          "match": [
            {
              "query": "$.FunctionLoadResponse.FunctionId",
              "expected": "${message_1}.FunctionLoadRequest.FunctionId"
            }
          ],
          "validators": [
            {
              "type": "string",
              "query": "$.FunctionLoadResponse.Result.Status",
              "expected": "Success"
            }
          ]
        }
      ]
    },
    {
      "type": "default",
      "name": "Invoking the http - trigger function...",
      "repeatable": true,
      "messages": [
        {
          "id": "message_1",
          "contentCase": "InvocationRequest",
          "direction": "Outgoing",
          "content": {
            "FunctionId": "FunctionApp.HttpTrigger.Run",
            "InputData": [
              {
                "name": "req",
                "data": {
                  "http": {
                    "method": "GET",
                    "url": "http://localhost:7071/api/HttpTrigger",
                    "identities": [
                      {
                        "nameClaimType": { "value": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name" },
                        "roleClaimType": { "value": "http://schemas.microsoft.com/ws/2008/06/identity/claims/role" }
                      }
                    ],
                    "nullableHeaders": {
                      "accept": { "value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9" },
                      "connection": { "value": "keep-alive" },
                      "host": { "value": "localhost:7071" },
                      "user-agent": { "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.5005.63 Safari/537.36 Edg/102.0.1245.30" },
                      "accept-encoding": { "value": "gzip, deflate, br" },
                      "accept-language": { "value": "en-US,en;q=0.9" },
                      "upgrade-insecure-requests": { "value": "1" },
                      "sec-ch-ua": { "value": "\" Not A;Brand\";v=\"99\", \"Chromium\";v=\"102\", \"Microsoft Edge\";v=\"102\"" },
                      "sec-ch-ua-mobile": { "value": "?0" },
                      "sec-ch-ua-platform": { "value": "\"Windows\"" },
                      "sec-fetch-site": { "value": "none" },
                      "sec-fetch-mode": { "value": "navigate" },
                      "sec-fetch-user": { "value": "?1" },
                      "sec-fetch-dest": { "value": "document" }
                    }
                  }
                }
              }
            ],
            "TriggerMetadata": {
              "Query": { "json": "{}" },
              "Headers": { "json": "{\"Accept\":\"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\",\"Connection\":\"keep-alive\",\"Host\":\"localhost:7071\",\"User-Agent\":\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.5005.63 Safari/537.36 Edg/102.0.1245.30\",\"Accept-Encoding\":\"gzip, deflate, br\",\"Accept-Language\":\"en-US,en;q=0.9\",\"Upgrade-Insecure-Requests\":\"1\",\"sec-ch-ua\":\"\\\" Not A;Brand\\\";v=\\\"99\\\", \\\"Chromium\\\";v=\\\"102\\\", \\\"Microsoft Edge\\\";v=\\\"102\\\"\",\"sec-ch-ua-mobile\":\"?0\",\"sec-ch-ua-platform\":\"\\\"Windows\\\"\",\"Sec-Fetch-Site\":\"none\",\"Sec-Fetch-Mode\":\"navigate\",\"Sec-Fetch-User\":\"?1\",\"Sec-Fetch-Dest\":\"document\"}" }
            },
            "TraceContext": {}
          },
          "setVariables": {
            "invocationId_1": "$.InvocationRequest.InvocationId"
          }
        },
        {
          "id": "message_2",
          "contentCase": "InvocationResponse",
          "direction": "Incoming",
          "match": [
            {
              "query": "$.InvocationResponse.InvocationId",
              "expected": "@{invocationId_1}"
            }
          ],
          "validators": [
            {
              "type": "string",
              "query": "$.InvocationResponse.Result.Status",
              "expected": "Success"
            }
          ]
        }
      ]
    }
  ]
}

